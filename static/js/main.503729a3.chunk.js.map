{"version":3,"sources":["App.tsx","index.js"],"names":["App","props","setTimer","days","hours","mins","secs","interval","setInterval","clearInterval","setState","end","Date","now","time","Math","floor","getTime","state","activeView","id","activePanel","className","this","React","Component","connect","send","root","document","getElementById","mVKMiniAppsScrollHelper","ReactDOM","render"],"mappings":"+SA8IeA,G,gEApHX,WAAYC,GAAe,IAAD,uBACtB,cAAMA,IAqBVC,SAAW,SAACC,EAAcC,EAAeC,EAAcC,GACnD,IAAIC,EAAWC,aAAY,WACX,GAARF,EACY,GAARD,EACa,GAATD,EACY,GAARD,EACAM,cAAcF,IAEd,EAAKG,SAAS,CACVP,OAAQA,EACRC,MAAO,KAEXA,EAAQ,KAGZ,EAAKM,SAAS,CACVN,QAASA,EACTC,KAAM,KAEVA,EAAO,KAGX,EAAKK,SAAS,CACVL,OAAQA,EACRC,KAAM,KAEVA,EAAO,IAGX,EAAKI,SAAS,CACVJ,OAAQA,MAGjB,MApDH,IAAIK,EAAM,IAAIC,KAAK,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,GACrCC,EAAMD,KAAKC,MACXC,EAAOC,KAAKC,OAAOL,EAAIM,UAAYJ,GAAO,KAC1CR,EAAOU,KAAKC,MAAMF,EAAO,IACzBV,EAAQW,KAAKC,MAAMX,EAAO,IAC1BF,EAAOY,KAAKC,MAAMZ,EAAQ,IARR,OAStBU,GAAe,GAAPT,EACRA,GAAgB,GAARD,EACRA,GAAgB,GAAPD,EAET,EAAKe,MAAQ,CACTf,KAAMA,EACNC,MAAOA,EACPC,KAAMA,EACNC,KAAMQ,GAEV,EAAKZ,SAASC,EAAMC,EAAOC,EAAMS,GAnBX,E,qDA4DtB,OACI,kBAAC,IAAD,CAAMK,WAAW,aACb,kBAAC,IAAD,CAAMC,GAAG,YAAYC,YAAY,aAC7B,kBAAC,IAAD,CAAOD,GAAG,aACN,6BAASE,UAAU,mBACf,uBAAGA,UAAU,kBAAb,qFAGA,uBAAGA,UAAU,wBAAb,+JAGA,uBAAGA,UAAU,kBACT,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,uBACVC,KAAKL,MAAMf,KAAO,GAAlB,WAA2BoB,KAAKL,MAAMf,MAASoB,KAAKL,MAAMf,MAE/D,yBAAKmB,UAAU,sBAAf,6BAIJ,0BAAMA,UAAU,2BAAhB,KACA,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,uBACVC,KAAKL,MAAMd,MAAQ,GAAnB,WAA4BmB,KAAKL,MAAMd,OAAUmB,KAAKL,MAAMd,OAEjE,yBAAKkB,UAAU,sBAAf,uBAIJ,0BAAMA,UAAU,2BAAhB,KACA,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,uBACVC,KAAKL,MAAMb,KAAO,GAAlB,WAA2BkB,KAAKL,MAAMb,MAASkB,KAAKL,MAAMb,MAE/D,yBAAKiB,UAAU,sBAAf,uBAIJ,0BAAMA,UAAU,2BAAhB,KACA,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,uBACVC,KAAKL,MAAMZ,KAAO,GAAlB,WAA2BiB,KAAKL,MAAMZ,MAASiB,KAAKL,MAAMZ,MAE/D,yBAAKgB,UAAU,sBAAf,gC,GAzGlBE,IAAMC,Y,wBCXxBC,IAAQC,KAAK,eAAgB,IAO7B,IAAMC,EAAOC,SAASC,eAAe,QACrCC,IAAwBH,GAGxBI,IAASC,OACL,kBAAC,EAAD,MACEL,K","file":"static/js/main.503729a3.chunk.js","sourcesContent":["import React from \"react\"\nimport {Panel, Root, View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport \"./panels/styles/countdown.css\"\n// import {connect} from \"react-redux\";\n\nimport CountdownView from \"./views/CountdownView\";\nimport Countdown from \"./panels/Countdoun\";\n// import AuthorizationView from \"./views/AuthorizationView\"\n// import BottomBar from \"./views/BottomBar\"\n// import {setUser} from \"./redux/actions/FetchedUserAction\";\n// import {getVkParams, recursiveTheming} from \"./utils/Utils\";\n// import {setTheme} from \"./redux/actions/ThemeAction\";\n\ninterface Props {\n}\n\ninterface State {\n    days: number,\n    hours: number,\n    mins: number,\n    secs: number,\n}\n\nclass App extends React.Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n\n        let end = new Date(2020, 8, 7, 13, 0, 0, 0);\n        let now = Date.now();\n        let time = Math.floor((end.getTime() - now) / 1000);\n        let mins = Math.floor(time / 60);\n        let hours = Math.floor(mins / 60);\n        let days = Math.floor(hours / 24);\n        time -= mins * 60;\n        mins -= hours * 60;\n        hours -= days * 24;\n\n        this.state = {\n            days: days,\n            hours: hours,\n            mins: mins,\n            secs: time,\n        }\n        this.setTimer(days, hours, mins, time);\n    }\n\n    setTimer = (days: number, hours: number, mins: number, secs: number) => {\n        let interval = setInterval(() => {\n            if (secs == 0) {\n                if (mins == 0) {\n                    if (hours == 0) {\n                        if (days == 0) {\n                            clearInterval(interval);\n                        } else {\n                            this.setState({\n                                days: --days,\n                                hours: 23,\n                            })\n                            hours = 23;\n                        }\n                    } else {\n                        this.setState({\n                            hours: --hours,\n                            mins: 59\n                        })\n                        mins = 59;\n                    }\n                } else {\n                    this.setState({\n                        mins: --mins,\n                        secs: 59,\n                    })\n                    secs = 59;\n                }\n            } else {\n                this.setState({\n                    secs: --secs,\n                })\n            }\n        }, 1000)\n    }\n\n\n    render() {\n        return (\n            <Root activeView=\"countdown\">\n                <View id=\"countdown\" activePanel=\"countdown\">\n                    <Panel id=\"countdown\">\n                        <section className=\"countdownScreen\">\n                            <p className=\"countdownTitle\">\n                                Скоро всё будет!\n                            </p>\n                            <p className=\"countdownDescription\">\n                                Идёт настройка на учебный год.\n                            </p>\n                            <p className=\"countdownTimer\">\n                                <div className=\"countdownTimerCol\">\n                                    <div className=\"countdownTimerDigit\">\n                                        {this.state.days < 10 ? `0${this.state.days}` : this.state.days}\n                                    </div>\n                                    <div className=\"countdownTimerDesc\">\n                                        дней\n                                    </div>\n                                </div>\n                                <span className=\"countdownTimerDelimeter\">:</span>\n                                <div className=\"countdownTimerCol\">\n                                    <div className=\"countdownTimerDigit\">\n                                        {this.state.hours < 10 ? `0${this.state.hours}` : this.state.hours}\n                                    </div>\n                                    <div className=\"countdownTimerDesc\">\n                                        час\n                                    </div>\n                                </div>\n                                <span className=\"countdownTimerDelimeter\">:</span>\n                                <div className=\"countdownTimerCol\">\n                                    <div className=\"countdownTimerDigit\">\n                                        {this.state.mins < 10 ? `0${this.state.mins}` : this.state.mins}\n                                    </div>\n                                    <div className=\"countdownTimerDesc\">\n                                        мин\n                                    </div>\n                                </div>\n                                <span className=\"countdownTimerDelimeter\">:</span>\n                                <div className=\"countdownTimerCol\">\n                                    <div className=\"countdownTimerDigit\">\n                                        {this.state.secs < 10 ? `0${this.state.secs}` : this.state.secs}\n                                    </div>\n                                    <div className=\"countdownTimerDesc\">\n                                        сек\n                                    </div>\n                                </div>\n                            </p>\n                        </section>\n                    </Panel>\n                </View>\n            </Root>\n        );\n    }\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from \"@vkontakte/vk-connect\";\nimport App from './App';\n// import store from \"./redux/store/main\";\n// import {Provider} from \"react-redux\"\n// import registerServiceWorker from './sw';\nimport mVKMiniAppsScrollHelper from '@vkontakte/mvk-mini-apps-scroll-helper';\nimport './index.css'\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n\nconst root = document.getElementById('root');\nmVKMiniAppsScrollHelper(root);\n\n\nReactDOM.render(\n    <App/>\n    , root);\n\n// registerServiceWorker();"],"sourceRoot":""}